<div class="person">
	<div class="person-img">
		<img src="<!--%bigImage%-->" alt="<!--%Name%-->">
	</div>
	<div class="person-info">
		<div class="doctor-info__category"><!--%categoryName%--></div>
		<div class="doctor-info__name"><!--%Name%--></div>
		<div class="doctor-info__specialty"><!--%Specialty%--></div>

		<!--%if Experience%-->
		<div class="doctor-info__experience">Стаж: <span><!--%Experience%--></span></div>
		<!--%end if Experience%-->

		<div class="person-info__buttons">
			<a href="<!--%dir_prefix%-->appointment/" class="header-bottom__btn btn btn_big">Запись на приём</a>
			<a  class="person-info__btn btn btn_big btn_green" onClick="showFeedbackModal()">Оставить отзыв</a>
		</div>
		<div class="person-info__description"><!--%Description%--></div>
	</div>

	<!--%if feedback%-->
	<div class="person-feedback">
		<div class="person-feedback__header">Отзывы пациентов</div>
		<div class="slider">
			<!--%loop feedback%-->
			<div class="slide">
				<div class="slide-wrapper">
					<blockquote class="slide__text"><!--%Feedback%--></blockquote>
					<div class="slide__author"><!--%FullName%--></div>
				</div>
			</div>
			<!--%end loop feedback%-->
		</div>
		<div class="slider-controls">
			<button class="slider__btn slider__btn--right">></button>
			<div class="dots"></div>
		</div>
	</div>
	<!--%end if feedback%-->

	<div class="blocker" onClick="hideFeedbackModal()"></div>
	<div class="person-leave-feedback" id="leave-feedback-block">
		<div class="person-feedback__header">Оставить отзыв о специалисте <!--%Name%--> <span onClick="hideFeedbackModal()">×</span></div>
		<div class="feedback-form">
			<form action="./" id="feedbackForm" onSubmit="return sendFormFeedback()">
				<input type="hidden" name="doctor" value="<!--%__id%-->">
				<input type="hidden" name="action" value="addFeedback">
				<input type="hidden" name="Scope" id="Scope" value="0">
				<div class="score-block">
					<span data-score="1" class="star" data-fa-i2svg=""><svg data-score="1" class="svg-inline--fa fa-star fa-w-18" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="star" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512" data-fa-i2svg=""><path fill="currentColor" d="M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z"></path></svg></span>
					<span data-score="2" class="star" data-fa-i2svg=""><svg data-score="2" class="svg-inline--fa fa-star fa-w-18" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="star" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512" data-fa-i2svg=""><path fill="currentColor" d="M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z"></path></svg></span>
					<span data-score="3" class="star" data-fa-i2svg=""><svg data-score="3" class="svg-inline--fa fa-star fa-w-18" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="star" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512" data-fa-i2svg=""><path fill="currentColor" d="M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z"></path></svg></span>
					<span data-score="4" class="star" data-fa-i2svg=""><svg data-score="4" class="svg-inline--fa fa-star fa-w-18" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="star" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512" data-fa-i2svg=""><path fill="currentColor" d="M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z"></path></svg></span>
					<span data-score="5" class="star" data-fa-i2svg=""><svg data-score="5" class="svg-inline--fa fa-star fa-w-18" aria-hidden="true" focusable="false" data-prefix="fas" data-icon="star" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512" data-fa-i2svg=""><path fill="currentColor" d="M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z"></path></svg></span>
				</div>
				<div class="feedback-text__wrap">
					<input class="feedback-form__input" type="text" name="FullName" placeholder="ФИО" data-required="" data-min="3">
					<input class="feedback-form__input" type="email" name="Email" placeholder="Email" data-required="" data-min="3">
					<textarea name="Feedback" id="Feedback" rows="10" class="feedback-form__input feedback-form__textarea" placeholder="Введите текст отзыва..."></textarea>
				</div>
				<div class="feedback-submit">
					<input type="submit" value="Отправить" class="header-bottom__btn btn btn_big">
				</div>
			</form>
		</div>
	</div>
</div>

<script>
	$('.star').mouseenter(function() {
		let star_value = $(this).attr('data-score');
		for (let i = 0; i < star_value; i++) {
			$(".star[data-score='"+i+"']").addClass('active');
		}
	})
	$('.star').mouseleave(function() {
		let star_selected = $('.star.selected').length == 0 ? 0 : $('.star.selected').attr('data-score');
		for (let i = 0; i < 5; i++) {
			if (star_selected == 0) {
				$(".star[data-score='"+i+"']").removeClass('active');
			} else {
				if (i > star_selected) {
					$(".star[data-score='"+i+"']").removeClass('active');
				}
			}
		}
	})
	$('.star').on('click', function() {
		let star_value = $(this).attr('data-score');
		$('.star').each(function() {
			if ($(this).attr('data-score') < star_value) {
				$(this).addClass('active').removeClass('selected');
			}
			if ($(this).attr('data-score') == star_value) {
				$(this).addClass('active').addClass('selected');
				$('#Scope').val(star_value);
			}
			if ($(this).attr('data-score') > star_value) {
				$(this).removeClass('active').removeClass('selected');
			}
		})
	})

	function sendFormFeedback() {
		let data = $('#feedbackForm').serialize();
		$.ajax({
			url: './', 
			method: "POST",
			data: data,
			cache: false,
			success: function(res) {
				if (res.match('error') != null) {
					$('.person-leave-feedback').append(res);
					$('.feedback-form').hide();
				} else {
					$('.feedback-form').replaceWith(res);
				}
	    		return false;
	        },
	        error: function(error) {
	        	console.log(error);
	    		return false;
	        }
		})
		return false;
	}
	
	function hideError() {
		$('.message.error').remove();
		$('.feedback-form').show();
	}

	function slider() {
		const slides = document.querySelectorAll('.slide');
		const btnRight = document.querySelector('.slider__btn--right');
		const dotContainer = document.querySelector('.dots');
		const slider = document.querySelector('.slider');

		const CROPPED_TEXT_MAX_LENGTH = {
			current: 411,
			next: 194,
		}

		let curSlide = 0;
		const maxSlide = slides.length;

		function createDots() {
			slides.forEach(function (_, i) {
				dotContainer.insertAdjacentHTML(
					'beforeend',
					`<button class="dots__dot dots__dot--active" data-slide="${i}"></button>`
				);
			});
		};

		function activateDot(slide) {
			document
				.querySelectorAll('.dots__dot')
				.forEach(dot => dot.classList.remove('dots__dot--active'));

			document
				.querySelector(`.dots__dot[data-slide="${slide}"]`)
				.classList.add('dots__dot--active');
		};

		function goToSlide(slide) {
			slide = Number(slide);
			slides.forEach(
				(card, index) => {
					card.style.transform = `translateX(${40.625 * (index - slide)}rem)`;
					card.classList.remove('current');
					card.classList.remove('next');
				}
			);

			slides[slide].classList.add('current');
			insertEditedText(slide, 'current');
			
			if (slides[slide + 1]) {
				slides[slide + 1].classList.add('next');
				insertEditedText(slide + 1, 'next');
			}

			slider.style.minHeight = window.innerWidth > 700 ? '14.875rem' : '19.25rem';
			if (window.innerWidth < 400) slider.style.minHeight = '23.25rem';
			slider.style.height = document.querySelector('.slide.current').offsetHeight + 'px';
		};

		function nextSlide() {
			if (curSlide === maxSlide - 1) {
				curSlide = 0;
			} else {
				curSlide++;
			}

			goToSlide(curSlide);
			activateDot(curSlide);
		};

		function prevSlide() {
			if (curSlide === 0) {
				curSlide = maxSlide - 1;
			} else {
				curSlide--;
			}

			goToSlide(curSlide);
			activateDot(curSlide);
		}

		function stripTextFromTags(text) {
			let cleanText = text.replace('... <span style="display: none;">', '');
			cleanText = cleanText.replace(`</span><button class="slider__btn--more">Читать далее</button>`, '');
			return cleanText;
		}

		function cleanAndCropText(type, el) {
			const textFull = el.querySelector('.slide__text').innerHTML;
			const maxLength = CROPPED_TEXT_MAX_LENGTH[type];

			const cleanText = stripTextFromTags(textFull);

			if (cleanText.length > maxLength) {
				const newText = cleanText.slice(0, maxLength) + `... <span style="display: none;">` + cleanText.slice(maxLength) + `</span><button class="slider__btn--more">Читать далее</button>`;
				return newText;
			} 
			return cleanText;
		}

		function insertCroppedText(el, text) {
			const textContainer = el.querySelector('.slide__text');
			updateContainerText(textContainer, text);
			activateMoreBtn(el);
		}

		function updateContainerText(container, text) {
			container.innerHTML = "";
			container.insertAdjacentHTML('afterbegin', text);
		}

		function activateMoreBtn(el) {
			const moreBtn = el.querySelector('.slider__btn--more');
			if (moreBtn) {
				moreBtn.addEventListener('click', showFullText.bind(el));
			}
		}

		function insertEditedText(slide, type) {
			const currentCroppedText = cleanAndCropText(type, slides[slide]);
			insertCroppedText(slides[slide], currentCroppedText);
		}

		function showFullText(el) {
			const textContainer = el.target.closest('.slide__text');
			const fullText = stripTextFromTags(textContainer.innerHTML);

			updateContainerText(textContainer, fullText);

			textContainer.closest('.slide').style.height = 'auto';

			const curSlideHeight = document.querySelector('.slide.current').offsetHeight ;
			const nextSlideHeight = document.querySelector('.slide.next').offsetHeight ;

			slider.style.minHeight = (curSlideHeight > nextSlideHeight) ? `${curSlideHeight}px` : `${nextSlideHeight}px`;
		}

		function init() {
			goToSlide(0);
			createDots();
			activateDot(0);
		};

		init();

		slider.closest('.inner-content').style.overflow = 'clip';

		btnRight.addEventListener('click', nextSlide);

		document.addEventListener('keydown', function(e) {
			if (e.key === 'ArrowLeft') prevSlide();
			if (e.key === 'ArrowRight') nextSlide();
		});

		dotContainer.addEventListener('click', function(e) {
			if (e.target.classList.contains('dots__dot')) {
				const [slide] = e.target.dataset.slide;
				goToSlide(slide);
				activateDot(slide);
			}
		});

		function activateSwipeOnMobile() {
			slider.addEventListener('touchstart', handleTouchStart, false);        
			slider.addEventListener('touchmove', handleTouchMove, false);
	
			let xDown = null;                                                        
			let yDown = null;
	
			function getTouches(evt) {
			return evt.touches ||             // browser API
					evt.originalEvent.touches; // jQuery
			}                                                     
																											
			function handleTouchStart(evt) {
				const firstTouch = getTouches(evt)[0];                                      
				xDown = firstTouch.clientX;                                      
				yDown = firstTouch.clientY;                                      
			};                                                
																											
			function handleTouchMove(evt) {
				if ( ! xDown || ! yDown ) {
					return;
				}
	
				let xUp = evt.touches[0].clientX;                                    
				let yUp = evt.touches[0].clientY;
	
				let xDiff = xDown - xUp;
				let yDiff = yDown - yUp;
																											
				if ( Math.abs( xDiff ) > Math.abs( yDiff ) ) {
					if ( xDiff > 0 ) {
							/* right swipe */ 
							nextSlide();
						} else {
							/* left swipe */
							prevSlide();
					}                       
				}
				xDown = null;
				yDown = null;                                             
			};
		};
		activateSwipeOnMobile();
	};

	slider();

	function showFeedbackModal() {
		$('#leave-feedback-block').addClass('show');
		$('.blocker').addClass('show');
	}
	function hideFeedbackModal() {
		$('#leave-feedback-block').removeClass('show');
		$('.blocker').removeClass('show');
	}
</script>
